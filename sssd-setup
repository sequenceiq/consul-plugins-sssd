#!/bin/bash

: ${LOGFILE:=/tmp/sssd.log}
: ${BRANCH:=master}

 get-sssd-conf(){
    declare desc="Generates sssd.conf file by the given arguments"
    declare kind=$1 uri=${2} schema=${3} search=${4} ad_server=${5} bind_dn=${6} krb5_server=${7} krb5_realm=${8}
    
    local domain=$(curl -s https://raw.githubusercontent.com/sequenceiq/consul-plugins-sssd/$BRANCH/conf/$kind)
    local template=$(awk -v d="${domain//$'\n'/\\n}" '{gsub("%DOMAIN%", d)}1' <(curl -s https://raw.githubusercontent.com/sequenceiq/consul-plugins-sssd/$BRANCH/conf/sssd.conf.template))
    template=${template//%LDAP_URI%/$uri}
    template=${template//%LDAP_SCHEMA%/$schema}
    template=${template//%LDAP_SEARCH_BASE%/$search}
    template=${template//%AD_SERVER%/$ad_server}
    template=${template//%BIND_DN%/$bind_dn}
    template=${template//%KRB5_SERVER%/$krb5_server}
    echo "${template//%KRB5_REALM%/$krb5_realm}"
}

save-configuration(){
    declare desc="Persists configuration to disk"
    declare location=$1 content="$2"
    mkdir -p $1
    echo "$2" > $1/sssd.conf
}

install-yeslogin() {
    cat > /etc/systemd/system/yeslogin.service << EOF
[Install]
WantedBy=multi-user.target

[Unit]
Description=Removes /run/nologin
After=network.service
Wants=network.service

[Service]
Type=oneshot
Restart=no
ExecStart=/usr/bin/rm -f /run/nologin
EOF
}

debug(){
  echo "[DEBUG] $*" >> $LOGFILE
}

main(){
    debug "Install packages"
    yum install -y sssd openssh-server authconfig
    debug "Generate and persist config file"
    save-configuration /etc/sssd "$(get-sssd-conf $PAYLOAD)"
    chown root:root /etc/sssd/sssd.conf
    chmod 0600 /etc/sssd/sssd.conf
    debug "Reconfigure auth"
    authconfig --enablesssd --enablesssdauth --enablelocauthorize --enablemkhomedir --enablecachecreds --updateall
    debug "Reconfigure existing service(s)"
    sed -i "s/#initgroups: files/initgroups: files sss/" /etc/nsswitch.conf
    sed -i "s/#Port 22/Port 2022/" /etc/ssh/sshd_config
    debug "Generate missing ssh keys"
    ssh-keygen -A
    debug "Start and enable sshd"
    systemctl enable sshd
    systemctl restart sshd || debug "Systemd not available start sshd in fallback mode" && /usr/sbin/sshd
    debug "Start and enable sssd"
    systemctl enable sssd
    systemctl start sssd || debug "Systemd not available start sssd in fallback mode" && sssd --daemon --debug-to-files
    debug "Remove login blocker"
    install-yeslogin
    systemctl enable yeslogin
    systemctl start yeslogin || debug "Systemd not available start yeslogin in fallback mode" && rm -f /run/nologin
}

[[ "$0" == "$BASH_SOURCE" ]] && main "$@" || true

debug "Sssd configuration finished"